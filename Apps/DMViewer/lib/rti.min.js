// Tue Oct 25 14:36:25 CEST 2016
/**
* Copyright Â© 2016 Aeneas Kaiser, Andrea Bianco.
* This file is part of DMSuite.
* DMSuite is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published
* by the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
* DMSuite is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
* See the GNU Affero General Public License for more details.
* You should have received a copy of the GNU Affero General Public
* License along with DMSuite. If not, see <http://www.gnu.org/licenses/>.
*/

function MultiresTree(config,imgURLPrefixes,ptm,scale){return this._multiresStrategyType="",this._format="",this._nodesCount=0,this._maxWidth=0,this._maxHeight=0,this._nodes=[],this._resolutions=[],this._levelIndices=[],this._tileSize=null,this._nLevels=0,this._center=null,this._frustum=null,this._loader=null,this._imgPrefixes=[],this.load(config,imgURLPrefixes,ptm,scale)||RTIError("MultiresTree: error while reading tree configuration"),this._nodes[0].requestTextures(this._loader,this._imgPrefixes,this._multiresStrategyType,this._format,this._initialLoadResponse.bind(this)),this}function MultiresTreeNode(ptm,numLayers){return this.index=-1,this.parentIndex=-1,this.childrenIndices=[-1,-1,-1,-1],this.position=null,this.geometry=null,this.material=null,this.renderObject=null,this.textures=[],this.hasContent=!0,this.numLayers=numLayers,this.loadState=0,this.loadedLayersCount=0,this.loadError=!1,this.ptm=ptm,this.imageRequestParams="",RTI_SHOW_BSPHERES&&(this.bSphereMesh=null),this}function PTM(ptmReference){return this.kRGB=null,this.kd=0,this.flatGSpecular=0,this.ks=0,this.alpha=0,this.gChannel=0,this.scale=[],this.bias=[],this.scaleSpecular=[],this.biasSpecular=[],this.orientation=0,this.mirror=null,this.debugMode=0,this._ptmType="",this._geometryType="",this._ptmContentWidth=0,this._ptmContentHeight=0,this._numberCoeffs=0,this.renderObject=null,this._multiresTree=null,this._activeTiles=[],this._vShader=null,this._fShader=null,this.initialized=this._load(ptmReference),this}function PTMMaterial(ptm,textures,contentLimitsX,contentLimitsY){var texture012Image=textures[0];texture012Image.magFilter=THREE.NearestFilter,texture012Image.minFilter=THREE.NearestFilter;var texture345Image=textures[1];texture345Image.magFilter=THREE.NearestFilter,texture345Image.minFilter=THREE.NearestFilter;var textureRGBImage=textures[2];textureRGBImage.magFilter=THREE.NearestFilter,textureRGBImage.minFilter=THREE.NearestFilter;var material=new THREE.ShaderMaterial({uniforms:{texture012:{type:"t",value:texture012Image},texture345:{type:"t",value:texture345Image},textureRGB:{type:"t",value:textureRGBImage},flatGSpecular:{type:"f",value:ptm.flatGSpecular},scale:{type:"fv1",value:ptm.scale},bias:{type:"fv1",value:ptm.bias},debugMode:{type:"i",value:ptm.debugMode},kRGB:{type:"v3",value:ptm.kRGB},kd:{type:"f",value:ptm.kd},alpha:{type:"f",value:ptm.alpha},orientation:{type:"i",value:ptm.orientation},mirror:{type:"v2",value:ptm.mirror},lDir:{type:"v3",value:new THREE.Vector3},H:{type:"v3",value:new THREE.Vector3},ambientLightCol:{type:"v3",value:new THREE.Vector3},directionalLightCol:{type:"v3",value:new THREE.Vector3},xLimits:{type:"v2",value:contentLimitsX},yLimits:{type:"v2",value:contentLimitsY}},vertexShader:ptm.getVShader(),fragmentShader:ptm.getFShader()});if("LRGBG_PTM"==ptm.getPTMType()){var textureGSpecularImage=textures[3];textureGSpecularImage.magFilter=THREE.NearestFilter,textureGSpecularImage.minFilter=THREE.NearestFilter,material.uniforms.textureGSpecular={type:"t",value:textureGSpecularImage},material.uniforms.scaleSpecular={type:"fv1",value:ptm.scaleSpecular},material.uniforms.biasSpecular={type:"fv1",value:ptm.biasSpecular},material.uniforms.ks={type:"f",value:ptm.ks},material.uniforms.gChannel={type:"i",value:ptm.gChannel}}return material.transparent=!0,material}function RTILog(message,optionalObject){RTI_LOG&&(arguments.length>1?console.log(message,optionalObject):console.log(message))}function RTIError(message){return RTI_ERROR_LOG&&console.log("ERROR: "+message),RTI_ERROR_ALERT&&alert("ERROR: "+message),!1}function RTIUtils(){return this}function RTIViewer(ptmReference,container){return this.ptm=null,this._lightDir=null,this._directionalLightColor=null,this._directionalLight=null,this._ambientLightColor=null,this._ambientLight=null,this.H=null,this._container=null,this._scene=null,this._camera=null,this._renderer=null,this._sceneMesh=null,this._raycaster=null,this._internalController=null,this._externalController=null,this._rendering=!1,this._init(ptmReference,container),this}function RTIViewerController(viewer){return this._viewer=null,this._mouseMode=0,this._isMouseDown=!1,this._lastMousePos=null,this._dPinchLast=0,this._init(viewer),this}MultiresTree.prototype={load:function(config,imgURLPrefixes,ptm,scale){this._imgPrefixes=imgURLPrefixes,this._format=config.PTM.imageFormat,this._applyConfig(config,ptm,scale);var temp=this._maxWidth;for(this._nLevels=1;temp>this._tileSize.x;)this._nLevels++,temp/=2;var numLayers=4;"LRGB_PTM"==ptm.getPTMType()&&(numLayers=3);for(var resolutions=[],levelIndices=[],nodes=[],index=0,i=0;i<this._nLevels;i++){0==i?resolutions[i]=new THREE.Vector2(this._tileSize.x,this._tileSize.y):resolutions[i]=resolutions[i-1].clone().multiplyScalar(2),levelIndices[i]=index;for(var count=Math.pow(4,i),j=0;count>j;j++){var node=new MultiresTreeNode(ptm,numLayers);if(node.index=index,index>0?node.parentIndex=Math.ceil(index/4)-1:node.parentIndex=-1,i<this._nLevels-1)for(var c=0;4>c;++c)i==this._nLevels-1?node.childrenIndices[c]=-1:node.childrenIndices[c]=4*index+1+(c+2)%4;nodes[index]=node,index++}}return this._nodes=nodes,this._resolutions=resolutions,this._levelIndices=levelIndices,"PLANE"!=ptm.getGeometryType()?(console.log("geometryType "+ptm.getGeometryType()+" currently not supported."),!1):(this._createTreePlaneGeom(ptm,scale),this.centerPlaneUL=new THREE.Vector3(this._nodes[0].position.x-scale/2,this._nodes[0].position.y+scale/2,this._nodes[0].position.z),this.centerPlaneLR=new THREE.Vector3(this._nodes[0].position.x+scale/2,this._nodes[0].position.y-scale/2,this._nodes[0].position.z),this._createContentLimits(),"IIIF"==this._multiresStrategyType&&this._createIIIFImageRequestParams(),this._frustum=new THREE.Frustum,this._loader=new THREE.TextureLoader,this._loader.crossOrigin="",!0)},dispose:function(){for(var i=0;i<this._nodes.length;i++)this._nodes[i].dispose();this._nodes=[],this._frustum=null,this._loader=null,THREE.Cache.clear()},requestTextures:function(screenRes,camera){RTILog("MultiresTree.requestTextures:");var requiredLevel=this._getRequiredLevel(screenRes,camera);RTILog(" required level: ",requiredLevel);for(var visibleNodes=this._getRequiredNodes(requiredLevel,camera),n=0;n<visibleNodes.length;n++)visibleNodes[n].requestTextures(this._loader,this._imgPrefixes,this._multiresStrategyType,this._format,this._loadResponse.bind(this))},getAvailableTiles:function(screenRes,camera){for(var requiredLevel=this._getRequiredLevel(screenRes,camera),availableNodes=[];requiredLevel>=0;){for(var visibleNodes=this._getRequiredNodes(requiredLevel,camera),allNodesLoaded=!0,n=0;n<visibleNodes.length;n++)if(2!=visibleNodes[n].loadState){allNodesLoaded=!1;break}if(allNodesLoaded){availableNodes=visibleNodes;break}requiredLevel--}return availableNodes},updateShaders:function(vShader,fShader){for(var i=0;i<this._nodes.length;i++)this._nodes[i].updateShaders(vShader,fShader)},getMesh:function(){return this._nodes[0].renderObject},getCenterPosition:function(){return this._center.clone()},_createTreePlaneGeom:function(ptm,scale){for(var planeSizes=[],index=0,i=0;i<this._nLevels;i++)for(var count=Math.pow(4,i),j=0;count>j;j++){var node=this._nodes[index];if(index>0){var t=index%4,parentNode=this._nodes[node.parentIndex],parentSize=planeSizes[node.parentIndex],currentPlaneSize=new THREE.Vector2(parentSize.x/2,parentSize.y/2);node.geometry=new THREE.PlaneGeometry(parentSize.x/2,parentSize.y/2),node.material=new THREE.MeshBasicMaterial({color:0}),node.material.transparent=!0,node.material.opacity=0,node.renderObject=new THREE.Mesh(node.geometry,node.material);var parentPos=parentNode.position,halfW=parentSize.x/4,halfH=parentSize.y/4,offsetToParent=new THREE.Vector3;1==t?offsetToParent.set(-halfW,halfH,0):2==t?offsetToParent.set(halfW,halfH,0):3==t?offsetToParent.set(-halfW,-halfH,0):0==t&&offsetToParent.set(halfW,-halfH,0),node.position=parentPos.clone().add(offsetToParent),node.renderObject.position.set(node.position.x,node.position.y,node.position.z),node.boundingSphere=new THREE.Sphere(node.position,Math.sqrt(Math.pow(currentPlaneSize.x/2,2)+Math.pow(currentPlaneSize.y/2,2))),planeSizes[index]=currentPlaneSize}else{var currentPlaneSize=new THREE.Vector2(scale,scale);node.geometry=new THREE.PlaneGeometry(scale,scale),node.material=new THREE.MeshBasicMaterial({color:0}),node.material.transparent=!0,node.material.opacity=0,node.renderObject=new THREE.Mesh(node.geometry,node.material),node.position=new THREE.Vector3(0,0,0),node.renderObject.position.set(node.position.x,node.position.y,node.position.z),node.boundingSphere=new THREE.Sphere(node.position,Math.sqrt(Math.pow(currentPlaneSize.x/2,2)+Math.pow(currentPlaneSize.y/2,2))),planeSizes[index]=currentPlaneSize}if(RTI_SHOW_BSPHERES){var bSphereGeom=new THREE.SphereGeometry(node.boundingSphere.radius,6,6),bSphereMaterial=new THREE.MeshLambertMaterial({color:65280}),bSphereMesh=new THREE.Mesh(bSphereGeom,bSphereMaterial);bSphereMesh.position.set(node.boundingSphere.center.x,node.boundingSphere.center.y,node.boundingSphere.center.z),node.bSphereMesh=bSphereMesh}index++}this._center=this._nodes[0].position},_createContentLimits:function(){for(var index=0,i=0;i<this._nLevels;i++)for(var count=Math.pow(4,i),j=0;count>j;j++){var node=this._nodes[index];if(index>0){var t=index%4,parentNode=this._nodes[node.parentIndex],xLimits=new THREE.Vector3,yLimits=new THREE.Vector3,parentXLimits=parentNode.xLimits,parentYLimits=parentNode.yLimits;1==t?(xLimits.set(2*parentXLimits.x,2*parentXLimits.y),yLimits.set(2*parentYLimits.x-1,2*parentYLimits.y-1)):2==t?(xLimits.set(2*parentXLimits.x-1,2*parentXLimits.y-1),yLimits.set(2*parentYLimits.x-1,2*parentYLimits.y-1)):3==t?(xLimits.set(2*parentXLimits.x,2*parentXLimits.y),yLimits.set(2*parentYLimits.x,2*parentYLimits.y)):0==t&&(xLimits.set(2*parentXLimits.x-1,2*parentXLimits.y-1),yLimits.set(2*parentYLimits.x,2*parentYLimits.y)),(xLimits.x>=1||xLimits.y<=0||yLimits.x>=1||yLimits.y<=0)&&(node.hasContent=!1),xLimits.clampScalar(0,1),yLimits.clampScalar(0,1),node.xLimits=new THREE.Vector2(xLimits.x,xLimits.y),node.yLimits=new THREE.Vector2(yLimits.x,yLimits.y)}else node.xLimits=new THREE.Vector2(this.xLimits.x/this._maxWidth,this.xLimits.y/this._maxWidth),node.yLimits=new THREE.Vector2(this.yLimits.x/this._maxHeight,this.yLimits.y/this._maxHeight);index++}},_createIIIFImageRequestParams:function(){for(var regionULs=[],index=0,i=0;i<this._nLevels;i++)for(var sizeFactor=Math.pow(2,i),regionSize=new THREE.Vector3(this._maxWidth/sizeFactor,this._maxHeight/sizeFactor),count=Math.pow(4,i),j=0;count>j;j++){var node=this._nodes[index];if(index>0){var parentRegionUL=regionULs[node.parentIndex],t=index%4;1==t?regionULs[index]=new THREE.Vector3(parentRegionUL.x,parentRegionUL.y):2==t?regionULs[index]=new THREE.Vector3(parentRegionUL.x+regionSize.x,parentRegionUL.y):3==t?regionULs[index]=new THREE.Vector3(parentRegionUL.x,parentRegionUL.y+regionSize.y):0==t&&(regionULs[index]=new THREE.Vector3(parentRegionUL.x+regionSize.x,parentRegionUL.y+regionSize.y)),node.imageRequestParams="/"+regionULs[index].x+","+regionULs[index].y+","+regionSize.x+","+regionSize.y+"/"+this._tileSize.x+","+this._tileSize.y+"/0/default"}else regionULs[index]=new THREE.Vector3(0,0),node.imageRequestParams="/0,0,"+this._maxWidth+","+this._maxHeight+"/"+this._tileSize.x+","+this._tileSize.y+"/0/default";index++}},_getRequiredLevel:function(screenRes,camera){var centerLROnScreen=this.centerPlaneLR.clone().project(camera),centerULOnScreen=this.centerPlaneUL.clone().project(camera),sizeOnScreen=(new THREE.Vector3).subVectors(centerLROnScreen,centerULOnScreen);sizeOnScreen.set(Math.abs(sizeOnScreen.x),Math.abs(sizeOnScreen.y),sizeOnScreen.z);for(var currResolution,requiredResolutionFactor=sizeOnScreen.clone().divideScalar(2),requiredResolution=screenRes.clone().multiply(requiredResolutionFactor),level=0;level<this._resolutions.length&&(currResolution=this._resolutions[level],!(currResolution.x>=requiredResolution.x&&currResolution.y>=requiredResolution.y));)level++;return level<this._resolutions.length?level:level-1},_getRequiredNodes:function(level,camera){var count=Math.pow(4,level),nodeIndex=this._levelIndices[level],visibleNodes=[];this._frustum.setFromMatrix((new THREE.Matrix4).multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse));for(var i=0;count>i;i++)this._frustum.intersectsSphere(this._nodes[nodeIndex].boundingSphere)&&visibleNodes.push(this._nodes[nodeIndex]),nodeIndex++;return visibleNodes},_loadResponse:function(nodeIndex,success){},_initialLoadResponse:function(nodeIndex,success){if(!success){for(var urls="",i=0;i<this._nodes[nodeIndex].numLayers;i++){var url=this._nodes[nodeIndex].getFullURL(i,this._imgPrefixes,this._multiresStrategy,this._format);urls=urls+url+"\n"}RTIError("MultiresTree._initialLoadResponse: Unable to load image data for node: "+nodeIndex+", urls:\n"+urls)}this._loadResponse(nodeIndex,success)},_applyConfig:function(config,ptm,scale){var ptmConfig=config.PTM,multiresConfig=config.MultiresStrategy;this._multiresStrategyType=multiresConfig.type,this._maxWidth=ptmConfig.maxResolution.w,this._maxHeight=ptmConfig.maxResolution.h;var halfContentWidth=ptmConfig.contentSize.w/2,halfContentHeight=ptmConfig.contentSize.h/2,halfWidth=this._maxWidth/2,halfHeight=this._maxHeight/2;this.xLimits=new THREE.Vector2(halfWidth-halfContentWidth,halfWidth+halfContentWidth),this.yLimits=new THREE.Vector2(halfHeight-halfContentHeight,halfHeight+halfContentHeight),this._tileSize=new THREE.Vector2(multiresConfig.tileSize.w,multiresConfig.tileSize.h);for(var nodesCount=1,nodesOnCurrentLevel=1,currentResolution=this._tileSize.x;currentResolution<this._maxWidth;)nodesOnCurrentLevel=4*nodesOnCurrentLevel,nodesCount+=nodesOnCurrentLevel,currentResolution=2*currentResolution;this._nodesCount=nodesCount}},MultiresTreeNode.prototype={dispose:function(){this.textures=[],this.material.dispose(),this.material=null,this.geometry.dispose(),this.geometry=null,this.renderObject.material.dispose(),this.renderObject.geometry.dispose(),this.renderObject=null,RTI_SHOW_BSPHERES&&(this.bSphereMesh.material.dispose(),this.bSphereMesh.geometry.dispose(),this.bSphereMesh=null)},getFullURL:function(layer,urlPrefixes,multiresStrategy,format){var fullURL;if("IIIF"==multiresStrategy)fullURL=urlPrefixes[layer]+this.imageRequestParams+"."+format;else{var nodeId=this.index+1,layerId=layer+1;fullURL=urlPrefixes[layer]+nodeId+"_"+layerId+this.imageRequestParams+"."+format}return fullURL},requestTextures:function(loader,urlPrefixes,multiresStrategy,format,loadCallBack){if(1!=this.loadState&&2!=this.loadState){if(!this.hasContent)return void(this.loadState=2);this.loadState=1,this.loadedLayersCount=0,this.loadError=!1;for(var layer=0;layer<this.numLayers;layer++){var fullURL=this.getFullURL(layer,urlPrefixes,multiresStrategy,format);loader.load(fullURL,this._onLoadSuccess.bind(this)(layer,loadCallBack),this._onLoadProgress.bind(this)(layer,loadCallBack),this._onLoadError.bind(this)(layer,loadCallBack)),RTILog("MultiresTreeNode.requestTextures: requesting: ",fullURL)}}},updateShaders:function(vShader,fShader){this.hasContent&&!this.loadError&&2==this.loadState&&(this.material.dispose(),this.material=null,this.renderObject.material.dispose(),this.renderObject.geometry.dispose(),this.renderObject=null,THREE.Cache.clear(),this.material=PTMMaterial(this.ptm,this.textures,this.xLimits,this.yLimits),this.renderObject=new THREE.Mesh(this.geometry,this.material),this.renderObject.position.set(this.position.x,this.position.y,this.position.z),"HALFDOME"==this.ptm.getGeometryType()&&(this.renderObject.material.side=THREE.BackSide,this.renderObject.rotateOnAxis(new THREE.Vector3(0,1,0),Math.PI)))},_onLoadSuccess:function(layer,loadCallBack){var self=this;return function(texture){self.textures[layer]=texture,self.loadedLayersCount++,RTILog("MultiresTreeNode._onLoadSuccess: Loaded texture: "+self.index+", layer: "+layer),self._setupMaterial(loadCallBack)}},_onLoadError:function(layer,loadCallBack){var self=this;return function(xhr){RTILog("MultiresTreeNode._onLoadError: Unable to load texture of node: "+self.index+", layer: "+layer),self.loadError=!0,self.loadedLayersCount++,self._setupMaterial(loadCallBack)}},_onLoadProgress:function(layer,loadCallBack){var self=this;return function(xhr){RTILog("MultiresTreeNode._onLoadProgress: Loading texture of node: "+self.index+", layer: "+layer+". "+xhr.loaded/xhr.total*100+"% loaded")}},_setupMaterial:function(loadCallBack){this.loadedLayersCount==this.numLayers&&(this.loadState=2,this.loadError?RTILog("MultiresTreeNode._setupMaterial: LoadError for textures in node: "+this.index+", using dummy material for this tile."):(this.material.dispose(),this.renderObject.material.dispose(),this.renderObject.geometry.dispose(),this.renderObject=null,THREE.Cache.clear(),this.material=PTMMaterial(this.ptm,this.textures,this.xLimits,this.yLimits),RTILog("MultiresTreeNode._setupMaterial: Success for textures in node: "+this.index+", all layers loaded."),this.renderObject=new THREE.Mesh(this.geometry,this.material),this.renderObject.position.set(this.position.x,this.position.y,this.position.z)),loadCallBack(this.index,!this.loadError))}},PTM.prototype={_load:function(ptmReference){"undefined"==typeof RTI_SHOW_BSPHERES&&(RTI_SHOW_BSPHERES=!1);var config;if(ptmReference.config)config=ptmReference.config,console.log("PTM.load: config embedded in PTMReference");else if(config=RTIUtils.getPTMConfiguration(ptmReference.configURL),console.log("PTM.load: configURL: "+ptmReference.configURL),!config)return!1;return this._applyConfig(config)?(this.mirror=new THREE.Vector2(0,0),this._loadShader(ptmReference.shaderReference)?(this._multiresTree=new MultiresTree(config,ptmReference.imgURLPrefixes,this,7.5),this.debugMode=0,this.kRGB=new THREE.Vector3(1,1,1),this.kd=.4,this.ks=0,this.alpha=75,this.flatGSpecular=0,"LRGBG_PTM"==this._ptmType&&(this.ks=.7,this.gChannel=2),this.renderObject=new THREE.Object3D,!0):!1):!1},dispose:function(){this._removeActiveTiles(),this._multiresTree&&this._multiresTree.dispose(),this._multiresTree=null},updateTiles:function(screenRes,camera){this._removeActiveTiles(),this._activeTiles=this._multiresTree.getAvailableTiles(screenRes,camera),this._addActiveTiles()},renderUpdate:function(lDir,H,directionalLightCol,ambientLightCol){for(var t=0;t<this._activeTiles.length;t++)!this._activeTiles[t].loadError&&this._activeTiles[t].hasContent&&(this._activeTiles[t].material.uniforms.debugMode.value=this.debugMode,this._activeTiles[t].material.uniforms.kRGB.value=this.kRGB,this._activeTiles[t].material.uniforms.kd.value=this.kd,this._activeTiles[t].material.uniforms.alpha.value=this.alpha,this._activeTiles[t].material.uniforms.flatGSpecular.value=this.flatGSpecular,this._activeTiles[t].material.uniforms.orientation.value=this.orientation,this._activeTiles[t].material.uniforms.mirror.value=this.mirror,this._activeTiles[t].material.uniforms.lDir.value=lDir,this._activeTiles[t].material.uniforms.H.value=H,this._activeTiles[t].material.uniforms.ambientLightCol.value=ambientLightCol,this._activeTiles[t].material.uniforms.directionalLightCol.value=directionalLightCol,"LRGBG_PTM"==this._ptmType&&(this._activeTiles[t].material.uniforms.ks.value=this.ks,this._activeTiles[t].material.uniforms.gChannel.value=this.gChannel))},requestTextures:function(screenRes,camera){this._multiresTree.requestTextures(screenRes,camera)},getMesh:function(){return this._multiresTree.getMesh()},loadShader:function(shaderReference){return this._removeActiveTiles(),this._loadShader(shaderReference)?(this._multiresTree.updateShaders(this._vShader,this._fShader),this._addActiveTiles(),!0):!1},getShaderRef:function(){return this._currentShaderRef},getVShader:function(){return this._vShader},getFShader:function(){return this._fShader},getPTMType:function(){return this._ptmType},getGeometryType:function(){return this._geometryType},getCenterPosition:function(){return this._multiresTree.getCenterPosition()},_addActiveTiles:function(){for(var t=0;t<this._activeTiles.length;t++)this.renderObject.add(this._activeTiles[t].renderObject),RTI_SHOW_BSPHERES&&this.renderObject.add(this._activeTiles[t].bSphereMesh)},_removeActiveTiles:function(){for(var t=0;t<this._activeTiles.length;t++)this.renderObject.remove(this._activeTiles[t].renderObject),RTI_SHOW_BSPHERES&&this.renderObject.remove(this._activeTiles[t].bSphereMesh)},_loadShader:function(shaderReference){if(shaderReference.supportedGeometries.indexOf(this._geometryType)>-1){var vShaderRequest=RTIUtils.sendSyncRequest(shaderReference.vShaderURL);if(vShaderRequest.status>=400)return RTIError("PTM._loadShader: Unable to load shader from "+shaderReference.vShaderURL);this._vShader=vShaderRequest.responseText;var fShaderRequest=RTIUtils.sendSyncRequest(shaderReference.fShaderURL);if(fShaderRequest.status>=400)return RTIError("PTM._loadShader: Unable to load shader from "+shaderReference.fShaderURL);if(this._fShader=fShaderRequest.responseText,this._fShader.indexOf("// !# include utils")>-1){var utilsShaderReq=RTIUtils.sendSyncRequest(shaderReference.utilsShaderURL);if(utilsShaderReq.status>=400)return RTIError("PTM._loadShader: Unable to load shader from "+shaderReference.utilsShaderURL);var utilsShader=utilsShaderReq.responseText;this._fShader=this._fShader.replace("// !# include utils",utilsShader)}return this._currentShaderRef=shaderReference,!0}return RTIError("PTM._loadShader: Requested shader does not support geometry type of current PTM")},_applyConfig:function(config){var ptmConfig=config.PTM,geometryConfig=config.Geometry;return this._ptmType=ptmConfig.type,"LRGBG_PTM"!=this._ptmType&&"LRGB_PTM"!=this._ptmType?RTIError("PTM._applyConfig: unsupported ptm type: "+this._ptmType):(this._geometryType=geometryConfig.type,this._ptmContentWidth=ptmConfig.contentSize.w,this._ptmContentHeight=ptmConfig.contentSize.h,"LRGBG_PTM"==this._ptmType?this._numberCoeffs=9:"LRGB_PTM"==this._ptmType&&(this._numberCoeffs=6),this.scale=ptmConfig.scale.slice(0,6),this.bias=ptmConfig.bias.slice(0,6),"LRGBG_PTM"==this._ptmType&&(this.scaleSpecular=ptmConfig.scale.slice(6,9),this.biasSpecular=ptmConfig.bias.slice(6,9)),this.orientation=ptmConfig.orientation,!0)}},RTIUtils.intersect=function(lPoint,lDir,pPoint,pNormal){var numerator=pPoint.clone().sub(lPoint).dot(pNormal),denominator=lDir.clone().dot(pNormal),zerotol=1e-10;if(!(Math.abs(denominator)<zerotol)){var d=numerator/denominator;return lDir.clone().multiplyScalar(d).add(lPoint)}},RTIUtils.normalizedMouseCoords=function(mouseEvent,domElement){var offset=RTIUtils._getOffsetRect(domElement),normalizedX=(mouseEvent.clientX-offset.left)/domElement.clientWidth*2-1,normalizedY=2*-((mouseEvent.clientY-offset.top)/domElement.clientHeight)+1;return new THREE.Vector2(normalizedX,normalizedY)},RTIUtils._getOffsetRect=function(elem){var box=elem.getBoundingClientRect(),body=document.body,docElem=document.documentElement,scrollTop=window.pageYOffset||docElem.scrollTop||body.scrollTop,scrollLeft=window.pageXOffset||docElem.scrollLeft||body.scrollLeft,clientTop=docElem.clientTop||body.clientTop||0,clientLeft=docElem.clientLeft||body.clientLeft||0,top=box.top+scrollTop-clientTop,left=box.left+scrollLeft-clientLeft;return{top:Math.round(top),left:Math.round(left)}},RTIUtils.readLines=function(text){for(var splitted=text.split("\n"),lines=[],i=0;i<splitted.length;++i){var line=splitted[i].replace(/\s\s+/g," ");line=line.trim(),line.length>0&&lines.push(line)}return lines},RTIUtils.runAsync=function(fn,callback){setTimeout(function(){fn(),callback&&callback()},0)},RTIUtils.setCookie=function(cname,cvalue,exdays){var d=new Date;d.setTime(d.getTime()+24*exdays*60*60*1e3);var expires="expires="+d.toUTCString();document.cookie=cname+"="+cvalue+"; "+expires},RTIUtils.getCookie=function(cname){for(var name=cname+"=",ca=document.cookie.split(";"),i=0;i<ca.length;i++){for(var c=ca[i];" "==c.charAt(0);)c=c.substring(1);if(0==c.indexOf(name))return c.substring(name.length,c.length)}return""},RTIUtils.hasCookie=function(cname){var cookie=RTIUtils.getCookie(cname);return cookie.length>0},RTIUtils.endsWith=function(str,suffix){return-1!==str.indexOf(suffix,str.length-suffix.length)},RTIUtils.sendSyncRequest=function(url){var request=new XMLHttpRequest;return request.open("GET",url,!1),request.send(),request},RTIUtils.getPTMConfiguration=function(configURL){var infoXMLRequest=RTIUtils.sendSyncRequest(configURL);if(infoXMLRequest.status>=400)return RTIError("RTIUtils.getPTMConfiguration: Unable to load PTMConfiguration file from "+configURL);success=!0;var config;if(RTIUtils.endsWith(configURL,"xml")){var doc=infoXMLRequest.responseXML;config=RTIUtils.parseXMLConfig(doc)}else{var doc=infoXMLRequest.responseText;try{config=JSON.parse(doc)}catch(err){return RTIError("RTIUtils.getPTMConfiguration: Unable to parse JSON from "+configURL+":\n "+err.message)}}return config},RTIUtils.parseXMLConfig=function(doc){var content=doc.getElementsByTagName("Content")[0],ptmType=content.getAttribute("type");if("LRGBG_PTM"!=ptmType&&"LRGB_PTM"!=ptmType)return RTIError("RTIUtils.parseXMLConfig: unsupported ptm format: "+ptmType);var geometryType="PLANE",imageFormat="jpg",val=parseInt(doc.getElementsByTagName("MultiRes")[0].getAttribute("format"));isNaN(val)||1==val&&(imageFormat="png");var scale=doc.getElementsByTagName("Scale")[0],size=doc.getElementsByTagName("Size")[0],bias=doc.getElementsByTagName("Bias")[0],contentWidth=parseInt(size.getAttribute("width")),contentHeight=parseInt(size.getAttribute("height")),expectedNumberCoeffs=9;"LRGB_PTM"==ptmType&&(expectedNumberCoeffs=6);var numberCoeffs=parseInt(size.getAttribute("coefficients"));if(numberCoeffs!=expectedNumberCoeffs)return RTIError("RTIUtils.parseXMLConfig: invalid info.xml: attribute 'coefficients' of tag 'Size' must be "+expectedNumberCoeffs+" for type"+ptmType);var tokens=scale.childNodes[0].nodeValue.split(" ");if(tokens.length<numberCoeffs)return RTIError("RTIUtils.parseXMLConfig: invalid info.xml: number of scale coefficients must be "+expectedNumberCoeffs+" for type"+ptmType);for(var scale=[],j=0;numberCoeffs>j;j++)scale[j]=parseFloat(tokens[j]);if(tokens=bias.childNodes[0].nodeValue.split(" "),tokens.length<numberCoeffs)return RTIError("RTIUtils.parseXMLConfig: invalid info.xml: number of bias coefficients must be "+expectedNumberCoeffs+" for type"+ptmType);for(var bias=[],j=0;numberCoeffs>j;j++)bias[j]=parseFloat(tokens[j]);var orientation=0,orientationTag=doc.getElementsByTagName("Orientation")[0];if(orientationTag){var orientation=parseInt(orientationTag.textContent);orientation>=0&&4>orientation&&(orientation=orientation)}var treeTag=doc.getElementsByTagName("Tree")[0],lines=RTIUtils.readLines(treeTag.textContent),n=lines.length,multiresStrategyType="IMAGE_TREE";if(3>n)return!1;if(tokens=lines[0].split(" "),tokens.length<2)return!1;var nodesCount=parseInt(tokens[0]);if(0>=nodesCount)return!1;if(tokens=lines[1].split(" "),tokens.length<1)return!1;var tileSizeWidth=parseInt(tokens[0]);if(0>=tileSizeWidth)return!1;var tileSizeHeight=tileSizeWidth;if(tokens=lines[2].split(" "),tokens.length<2)return!1;var maxWidth=parseFloat(tokens[0]),maxHeight=parseFloat(tokens[1]),config={PTM:{type:ptmType,maxResolution:{w:maxWidth,h:maxHeight},contentSize:{w:contentWidth,h:contentHeight},scale:scale,bias:bias,orientation:orientation,imageFormat:imageFormat},Geometry:{type:geometryType},MultiresStrategy:{type:multiresStrategyType,tileSize:{w:tileSizeWidth,h:tileSizeHeight}}};return config},RTI_LOG=!1,RTI_ERROR_LOG=!0,RTI_ERROR_ALERT=!0,RTIViewer.prototype={_init:function(ptmReference,container){"string"==typeof ptmReference&&(ptmReference=JSON.parse(ptmReference)),this._container=container;var width=container.clientWidth,height=container.clientHeight,fov=45,aspect=width/height,near=.1,far=1e3;this._raycaster=new THREE.Raycaster,this._scene=new THREE.Scene,this._camera=new THREE.PerspectiveCamera(fov,aspect,near,far),this._scene.add(this._camera),this._camera.position.set(0,0,5),this._camera.lookAt(this._scene.position),this._renderer=new THREE.WebGLRenderer,this._renderer.setSize(width,height),container.appendChild(this._renderer.domElement),this._H=new THREE.Vector3,this._lightDir=new THREE.Vector3(0,0,1),this._directionalLightColor=new THREE.Vector3(1.5,1.5,1.5),this._directionalLight=new THREE.DirectionalLight(16777215,1),this.setDirectionalLightDirection(this._lightDir),this.setDirectionalLightColor(this._directionalLightColor),this._scene.add(this._directionalLight),this._ambientLightColor=new THREE.Vector3(0,0,0),this._ambientLight=new THREE.AmbientLight(16777215),this.setAmbientLightColor(this._ambientLightColor),this._scene.add(this._ambientLight),this.ptm=new PTM(ptmReference),this._scene.add(this.ptm.renderObject),this._initSceneMesh(ptmReference),this._initialSettings=this.getSettings(),this._requestTextures(),this._internalController=new RTIViewerController(this),this._rendering=!1},loadPTM:function(ptmReference){var newPTM=new PTM(ptmReference);return newPTM.initialized?(this.ptm&&(this._scene.remove(this.ptm.renderObject),this.ptm.dispose()),this._sceneMesh&&(this._scene.remove(this._sceneMesh),this._sceneMesh.material.dispose(),this._sceneMesh.geometry.dispose(),this._sceneMesh=null),this.ptm=newPTM,this._scene.add(this.ptm.renderObject),this._initSceneMesh(ptmReference),this.setDirectionalLightDirection(new THREE.Vector3(0,0,1)),this.setDirectionalLightColor(new THREE.Vector3(1.5,1.5,1.5)),this.setAmbientLightColor(new THREE.Vector3(0,0,0)),this._initialSettings=this.getSettings(),this.resetCamera(),!0):(newPTM.dispose(),!1)},loadShader:function(shaderReference){return this.ptm.loadShader(shaderReference)},getShader:function(){return this.ptm.getShaderRef()},startRendering:function(){this._rendering?console.log("WARNING: rendering loop already running."):(this._rendering=!0,this._animate())},stopRendering:function(){this._rendering=!1},_animate:function(){if(this._rendering){requestAnimationFrame(this._animate.bind(this));var screenRes=new THREE.Vector2(this._renderer.domElement.clientWidth,this._renderer.domElement.clientHeight);this.ptm.updateTiles(screenRes,this._camera),this.ptm.renderUpdate(this._lightDir,this._H,this._directionalLightColor,this._ambientLightColor),this._renderer.render(this._scene,this._camera)}},resize:function(){var viewerWidth=this._container.clientWidth,viewerHeight=this._container.clientHeight;this._renderer.setSize(viewerWidth,viewerHeight),this._camera.aspect=viewerWidth/viewerHeight,this._camera.updateProjectionMatrix(),this._requestTextures()},dragView:function(lastPos2d,currentPos2){this._raycaster.setFromCamera(lastPos2d,this._camera);var intersectLast=this._raycaster.intersectObject(this.ptm.getMesh());if(intersectLast[0]){var camPos=this._camera.position,lDir=new THREE.Vector3(currentPos2.x,currentPos2.y,.5).unproject(this._camera).sub(camPos).normalize(),intersectCurrent=RTIUtils.intersect(camPos,lDir,intersectLast[0].point,new THREE.Vector3(0,0,-1));if(intersectCurrent&&intersectLast[0]){var dist=intersectCurrent.clone().sub(intersectLast[0].point);this._camera.position.set(camPos.x-dist.x,camPos.y-dist.y,camPos.z),this._requestTextures()}}},zoomView:function(zoomFactor,mousePos2d){Math.abs(zoomFactor)>=1&&(zoomFactor=.1*Math.sign(zoomFactor)),this._raycaster.setFromCamera(mousePos2d,this._camera);var intersect=this._raycaster.intersectObject(this.ptm.getMesh());if(intersect[0]){var viewLine=intersect[0].point.clone().sub(this._camera.position),newDist=(1-zoomFactor)*viewLine.length();newDist>3*this._camera.near&&100>newDist&&(this._camera.position.addScaledVector(viewLine,zoomFactor),this._requestTextures())}},resetCamera:function(){this._camera.position.set(0,0,5),this._requestTextures()},setDirectionalLightColor:function(color){this._directionalLightColor=color;var dirLightColor=color.clone().normalize();this._directionalLight.color.setRGB(dirLightColor.x,dirLightColor.y,dirLightColor.z),this._directionalLight.intensity=Math.min(color.length(),1)},setDirectionalLightDirection:function(direction){
this._lightDir.set(direction.x,direction.y,direction.z),this._directionalLight.position.set(direction.x,direction.y,direction.z),this._updateH(),this._externalController&&this._externalController.notifyLightDirChange(direction)},setAmbientLightColor:function(color){this._ambientLightColor.set(color.x,color.y,color.z),this._ambientLight.color.setRGB(color.x,color.y,color.z)},getInitialSettings:function(){return this._initialSettings},getSettings:function(){var settings={PTMType:this.ptm.getPTMType(),ambientLightColor:this._ambientLightColor.clone(),directionalLightColor:this._directionalLightColor.clone(),lightDir:this._lightDir.clone(),kRGB:this.ptm.kRGB.clone(),kd:this.ptm.kd,alpha:this.ptm.alpha,flatGSpecular:this.ptm.flatGSpecular,orientation:this.ptm.orientation};return"LRGBG_PTM"==this.ptm.getPTMType()&&(settings.ks=this.ptm.ks,settings.gChannel=this.ptm.gChannel),settings},getLightDir:function(){return this._lightDir.clone()},getAmbientLightColor:function(){return this._ambientLightColor.clone()},getDirectionalLightColor:function(){return this._directionalLightColor.clone()},getDomElement:function(){return this._renderer.domElement},registerController:function(controller){this._externalController=controller},_requestTextures:function(){this._scene.updateMatrixWorld(),this._camera.updateMatrixWorld(),this._camera.matrixWorldInverse.getInverse(this._camera.matrixWorld);var screenRes=new THREE.Vector2(this._renderer.domElement.clientWidth,this._renderer.domElement.clientHeight);this.ptm.requestTextures(screenRes,this._camera)},_updateH:function(){var ldir=this._lightDir.clone().normalize(),vdir=new THREE.Vector3(0,0,1);this._H.addVectors(ldir,vdir).normalize()},_initSceneMesh:function(ptmReference){if(ptmReference.sceneMeshURL){var loader=new THREE.JSONLoader,self=this;loader.load(ptmReference.sceneMeshURL,function(geometry){self._sceneMesh=new THREE.Mesh(geometry,new THREE.MeshPhongMaterial),self._sceneMesh.rotation.x=2*Math.PI/2,self._scene.add(self._sceneMesh);var pos=self._sceneMesh.position;self._sceneMesh.position.set(pos.x,pos.y,pos.z-.2)},function(request){console.log("loading sceneMesh ...")},function(){RTIError("RTIViewer._initSceneMesh: Unable to load sceneMesh from "+ptmReference.sceneMeshURL)})}}},RTIViewerController.prototype={_init:function(viewer){console.log("RTIViewerController._init:"),"undefined"==typeof RTI_LIGHTCONTROL_IN_VIEWCONTAINER&&(RTI_LIGHTCONTROL_IN_VIEWCONTAINER=!0),this._viewer=viewer,RTI_LIGHTCONTROL_IN_VIEWCONTAINER?this._mouseMode=1:this._mouseMode=0,this._isMouseDown=!1,this._lastMousePos=new THREE.Vector2,this._dPinchLast=0,window.addEventListener("resize",this.onResize.bind(this)),this._viewer.getDomElement().addEventListener("mousedown",this.onMouseDown.bind(this)),this._viewer.getDomElement().addEventListener("mousemove",this.onMouseMove.bind(this)),this._viewer.getDomElement().addEventListener("mouseout",this.onMouseOut.bind(this)),this._viewer.getDomElement().addEventListener("mouseup",this.onMouseUp.bind(this)),this._viewer.getDomElement().addEventListener("wheel",this.onWheel.bind(this)),RTI_LIGHTCONTROL_IN_VIEWCONTAINER&&(this._viewer.getDomElement().setAttribute("tabindex",-1),this._viewer.getDomElement().focus(),this._viewer.getDomElement().addEventListener("keyup",this.onKeyUp.bind(this))),this._viewer.getDomElement().addEventListener("touchstart",this.onTouchStart.bind(this)),this._viewer.getDomElement().addEventListener("touchmove",this.onTouchMove.bind(this)),this._viewer.getDomElement().addEventListener("touchend",this.onTouchEnd.bind(this))},onResize:function(){this._viewer.resize()},onMouseOut:function(event_info){event_info.preventDefault(),this._isMouseDown=!1},onMouseUp:function(event_info){event_info.preventDefault(),this._isMouseDown=!1},onMouseDown:function(event_info){if(event_info.preventDefault(),0==event_info.button){this._isMouseDown=!0,this._viewer.getDomElement().focus();var newMousePos=RTIUtils.normalizedMouseCoords(event_info,this._viewer.getDomElement());0==this._mouseMode?this._lastMousePos=newMousePos:1==this._mouseMode&&this.setLightDir(newMousePos)}},onMouseMove:function(event_info){if(event_info.preventDefault(),this._isMouseDown){var newMousePos=RTIUtils.normalizedMouseCoords(event_info,this._viewer.getDomElement());0==this._mouseMode?(this._viewer.dragView(this._lastMousePos,newMousePos),this._lastMousePos=newMousePos):1==this._mouseMode&&this.setLightDir(newMousePos)}},onWheel:function(event_info){event_info.preventDefault();var mousePos=RTIUtils.normalizedMouseCoords(event_info,this._viewer.getDomElement());this._viewer.zoomView(event_info.deltaY/40,mousePos)},onTouchStart:function(event){if(event.preventDefault(),1==event.targetTouches.length){var touch=event.changedTouches[0];this._isMouseDown=!0,this._viewer.getDomElement().focus();var newMousePos=RTIUtils.normalizedMouseCoords(touch,this._viewer.getDomElement());0==this._mouseMode?this._lastMousePos=newMousePos:1==this._mouseMode&&this.setLightDir(newMousePos)}},onTouchMove:function(event){if(event.preventDefault(),1==event.targetTouches.length){var touch=event.changedTouches[0];if(this._isZoomActive=!1,this._isMouseDown){var newMousePos=RTIUtils.normalizedMouseCoords(touch,this._viewer.getDomElement());0==this._mouseMode?(this._viewer.dragView(this._lastMousePos,newMousePos),this._lastMousePos=newMousePos):1==this._mouseMode&&this.setLightDir(newMousePos)}}else if(2==event.targetTouches.length){var touch0=event.changedTouches[0],touch1=event.changedTouches[1];this._isMouseDown=!1;var newMousePos0=RTIUtils.normalizedMouseCoords(touch0,this._viewer.getDomElement()),newMousePos1=RTIUtils.normalizedMouseCoords(touch1,this._viewer.getDomElement()),dPinchNew=Math.pow(newMousePos1.x-newMousePos0.x,2)+Math.pow(newMousePos1.y-newMousePos0.y,2);if(this._isZoomActive){var d=dPinchNew-this._dPinchLast;this._viewer.zoomView(d,new THREE.Vector2(0,0)),this._dPinchLast=dPinchNew}else this._isZoomActive=!0,this._dPinchLast=dPinchNew}},onTouchEnd:function(event){event.preventDefault(),this._isZoomActive=!1,this._isMouseDown=!1},onKeyUp:function(event_info){event_info.preventDefault(),32==event_info.keyCode&&(this._mouseMode=1-this._mouseMode)},setLightDir:function(mousePos2d){var lightDir=new THREE.Vector3(mousePos2d.x,mousePos2d.y,0),sumSquares=lightDir.x*lightDir.x+lightDir.y*lightDir.y;1>sumSquares?lightDir.setZ(Math.sqrt(1-sumSquares)):(lightDir.setZ(0),lightDir.normalize()),this._viewer.setDirectionalLightDirection(lightDir)}};
